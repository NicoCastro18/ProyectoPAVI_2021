<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelarCambios.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2X1VAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnConfirmarCambios.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>